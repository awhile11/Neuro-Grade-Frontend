<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
<title>Neuro Grade Assignments</title>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
<style>
  :root {
    --primary-color: #3a86ff;
    --secondary-color: #8338ec;
    --accent-color: #ff006e;
    --light-gray: #f8f9fa;
    --text-dark: #212529;
    --text-light: #6c757d;
    --border-color: #dee2e6;
    --success-color: #4caf50;
    --warning-color: #ff9800;
    --danger-color: #f44336;
    --upload-color: #ff6b35;
  }
  
  * {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  }
  
  body {
    display: flex;
    background: #f8f9fa;
    height: 100vh;
    color: #333;
    overflow: hidden;
    position: relative;
  }

  /* Popup overlay */
  .popup-overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.7);
    display: none;
    justify-content: center;
    align-items: center;
    z-index: 2000;
    padding: 20px;
  }
  
  .popup-overlay.active {
    display: flex;
    animation: fadeIn 0.3s ease;
  }
  
  .integrity-popup {
    background: white;
    border-radius: 16px;
    width: 100%;
    max-width: 600px;
    overflow: hidden;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
  }
  
  .popup-header {
    background: var(--primary-color);
    color: white;
    padding: 20px;
    text-align: center;
  }
  
  .popup-header h2 {
    margin: 0;
    font-size: 24px;
  }
  
  .popup-content {
    padding: 25px;
  }
  
  .uploaded-file-card {
    background: var(--light-gray);
    border-radius: 12px;
    padding: 20px;
    margin-bottom: 25px;
    display: flex;
    align-items: center;
    gap: 15px;
  }
  
  .file-icon-large {
    font-size: 40px;
    color: var(--primary-color);
  }
  
  .file-details-large {
    flex: 1;
  }
  
  .file-name-large {
    font-weight: 600;
    font-size: 18px;
    margin-bottom: 5px;
  }
  
  .file-info-large {
    color: var(--text-light);
    font-size: 14px;
  }
  
  .integrity-section {
    background: #fff9e6;
    border-left: 4px solid #ffc107;
    padding: 20px;
    border-radius: 8px;
    margin-bottom: 25px;
  }
  
  .integrity-section h3 {
    color: #856404;
    margin-bottom: 10px;
    display: flex;
    align-items: center;
    gap: 10px;
  }
  
  .integrity-section p {
    color: #856404;
    line-height: 1.6;
    margin-bottom: 15px;
  }
  
  .checkbox-container {
    display: flex;
    align-items: flex-start;
    gap: 10px;
    margin-top: 15px;
  }
  
  .checkbox-container input {
    margin-top: 3px;
  }
  
  .checkbox-container label {
    font-size: 15px;
    color: #856404;
    line-height: 1.5;
  }
  
  .popup-buttons {
    display: flex;
    gap: 15px;
  }
  
  .popup-button {
    flex: 1;
    padding: 12px 20px;
    border-radius: 8px;
    font-size: 16px;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.3s ease;
    border: none;
  }
  
  .cancel-button {
    background: #f8f9fa;
    color: var(--text-dark);
    border: 1px solid var(--border-color);
  }
  
  .cancel-button:hover {
    background: #e9ecef;
  }
  
  .submit-button {
    background: var(--success-color);
    color: white;
  }
  
  .submit-button:hover {
    background: #3d8b40;
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(76, 175, 80, 0.2);
  }
  
  .submit-button:disabled {
    background: #a5d6a7;
    cursor: not-allowed;
    transform: none;
    box-shadow: none;
  }

  /* Top left logo */
    .top-left-logo {
      position: absolute;
      top: -35px;
      left: -10px;
      height: 200px;
      z-index: 1000;
  }

  /* Sidebar */
    .sidebar {
  width: 200px;
  height: 100vh;
  background: #fff;
  padding: 20px;
  border-right: 1px solid #ddd;
  display: flex;
  flex-direction: column;
  align-items: flex-start; /* align items horizontally (left-align) */
  justify-content: center; /* center contents vertically */
  box-shadow: 2px 0 8px rgba(0,0,0,0.08);
  border-radius: 0 12px 12px 0;
  transition: all 0.3s ease;
}

  .nav {
    display: flex;
    flex-direction: column;
    gap: 10px;
    width: 100%;
  }

  .nav a {
    text-decoration: none;
    width: 100%;
  }

  .nav button {
    background: none;
    border: 1px solid rgba(0,0,0,0.08);
    font-size: 16px;
    padding: 12px 15px;
    text-align: left;
    cursor: pointer;
    border-radius: 6px;
    transition: all 0.3s ease;
    color: #333;
    width: 100%;
    display: flex;
    align-items: center;
    gap: 15px;
    position: relative;
    overflow: hidden;
  }

  .nav button::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(58, 134, 255, 0.1), transparent);
    transition: left 0.5s ease;
  }

  .nav button:hover::before {
    left: 100%;
  }

  .nav button.active {
    background: var(--primary-color);
    color: #fff;
    font-weight: bold;
    transform: translateX(5px);
    box-shadow: 2px 2px 8px rgba(0,0,0,0.1);
  }

  .nav button:hover {
    background: rgba(58, 134, 255, 0.1);
    color: var(--primary-color);
    border-color: var(--primary-color);
    transform: translateX(3px);
  }

  .nav button i {
    transition: transform 0.3s ease;
  }

  .nav button:hover i {
    transform: scale(1.2);
  }

  .nav button.active i {
    transform: scale(1.2);
    color: #fff;
  }

  /* Main content */
  .main {
    flex: 1;
    padding: 20px;
    display: flex;
    flex-direction: column;
    overflow-y: auto;
    margin-top: 70px;
    background: #f8f9fa;
    transition: all 0.3s ease;
  }

  /* Top bar */
  .top-bar {
    display: flex;
    justify-content: flex-end;
    align-items: center;
    gap: 20px;
    margin-bottom: 20px;
    padding: 15px;
    background: #fff;
    border-radius: 12px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.06);
    border: 1px solid rgba(0,0,0,0.05);
  }

  .icon-link {
    position: relative;
    text-decoration: none;
    color: var(--primary-color);
    font-size: 20px;
    transition: transform 0.3s, color 0.3s;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background: rgba(58, 134, 255, 0.1);
    margin-top: -10px;
    border: 1px solid rgba(58, 134, 255, 0.2);
  }

  .icon-link:hover {
    transform: scale(1.2) rotate(5deg);
    color: #ff6b6b;
    background: #ffe9e9;
    border-color: rgba(255, 107, 107, 0.3);
  }

  .icon-badge {
    position: absolute;
    top: -5px;
    right: -5px;
    background: #ff6b6b;
    color: white;
    border-radius: 50%;
    width: 18px;
    height: 18px;
    font-size: 11px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
    border: 1px solid #fff;
    animation: pulse 1.5s infinite;
  }
  @keyframes pulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.1); }
    100% { transform: scale(1); }
  }

  .top-user {
    display: flex;
    align-items: center;
    gap: 10px;
    font-size: 14px;
    padding: 8px 15px;
    background: #f8f9fa;
    border-radius: 20px;
    border: 1px solid rgba(0,0,0,0.08);
    transition: all 0.3s ease;
  }

  .top-user:hover {
    background: rgba(58, 134, 255, 0.1);
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
  }

  .top-user img {
    width: 35px;
    height: 35px;
    border-radius: 50%;
    object-fit: cover;
    transition: all 0.3s ease;
  }

  .top-user:hover img {
    transform: scale(1.1);
    border: 2px solid var(--primary-color);
  }

  /* Section headings */
  .section-title {
    font-size: 22px;
    font-weight: 700;
    margin-bottom: 24px;
    color: #000;
    display: flex;
    align-items: center;
    justify-content: space-between;
  }
  
  .section-title .view-all {
    font-size: 14px;
    color: var(--primary-color);
    font-weight: 500;
    cursor: pointer;
    transition: all 0.3s ease;
    padding: 8px 16px;
    border-radius: 6px;
    display: flex;
    align-items: center;
    gap: 8px;
  }
  
  .section-title .view-all:hover {
    background: rgba(58, 134, 255, 0.1);
    transform: translateY(-2px);
  }

  /* Main content layout */
  .content-container {
    display: flex;
    gap: 30px;
    flex: 1;
  }
  
  .left-column {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: 30px;
  }
  
  .right-column {
    width: 40%;
    min-width: 350px;
  }

  /* Assignment sections */
  .assignment-section {
    background: white;
    border-radius: 16px;
    padding: 24px;
    box-shadow: 0 8px 20px rgba(0,0,0,0.08);
  }
  
  .assignment-section h3 {
    font-size: 18px;
    margin-bottom: 20px;
    color: var(--text-dark);
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  
  /* Practice Tasks Cards with individual blue backgrounds */
  .cards-container {
    display: flex;
    flex-wrap: wrap;
    gap: 20px;
    margin-bottom: 40px;
  }
  
  .blue-card {
    background: white;
    border-radius: 16px;
    padding: 25px;
    box-shadow: 0 8px 20px rgba(0,0,0,0.1);
    position: relative;
    overflow: hidden;
    width: calc(50% - 20px);
    min-width: 280px;
    transition: all 0.3s ease;
    border-left: 5px solid var(--primary-color);
    cursor: pointer;
  }
  
  .blue-card::before {
    content: '';
    position: absolute;
    top: -50%;
    right: -20%;
    width: 150px;
    height: 150px;
    background: rgba(58, 134, 255, 0.1);
    border-radius: 50%;
    z-index: 0;
  }
  
  .blue-card::after {
    content: '';
    position: absolute;
    bottom: -60%;
    left: -15%;
    width: 120px;
    height: 120px;
    background: rgba(131, 56, 236, 0.1);
    border-radius: 50%;
    z-index: 0;
  }
  
  .blue-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 12px 25px rgba(0,0,0,0.15);
  }
  
  .blue-card.active {
    border-left: 5px solid var(--secondary-color);
    box-shadow: 0 8px 20px rgba(131, 56, 236, 0.2);
  }
  
  .blue-card-content {
    position: relative;
    z-index: 1;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    height: 100%;
  }
  
  .blue-card h3 {
    margin: 0 0 12px 0;
    font-size: 18px;
    font-weight: 600;
    color: #000;
  }
  
  .assignment-code {
    font-size: 14px;
    color: var(--text-light);
    background: rgba(58, 134, 255, 0.1);
    padding: 4px 8px;
    border-radius: 4px;
    margin-bottom: 12px;
  }
  
  .assignment-due {
    font-size: 14px;
    color: var(--text-light);
    display: flex;
    align-items: center;
    gap: 8px;
    margin-bottom: 20px;
  }
  
  .card-buttons {
    display: flex;
    gap: 10px;
    margin-top: auto;
    width: 100%;
  }
  
  .card-button {
    flex: 1;
    padding: 8px 12px;
    border-radius: 6px;
    font-size: 14px;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 5px;
    border: none;
  }
  
  .view-button {
    background: rgba(58, 134, 255, 0.1);
    color: var(--primary-color);
    border: 1px solid rgba(58, 134, 255, 0.3);
  }
  
  .view-button:hover {
    background: var(--primary-color);
    color: white;
  }
  
  .download-button {
    background: rgba(76, 175, 80, 0.1);
    color: var(--success-color);
    border: 1px solid rgba(76, 175, 80, 0.3);
  }
  
  .download-button:hover {
    background: var(--success-color);
    color: white;
  }

  /* Upload section */
  .upload-section {
    background: white;
    border-radius: 16px;
    padding: 24px;
    height: 100%;
    box-shadow: 0 8px 20px rgba(0,0,0,0.08);
    text-align: center;
    display: flex;
    flex-direction: column;
  }
  
  .upload-area {
    border: 2px dashed var(--border-color);
    border-radius: 12px;
    padding: 40px 20px;
    margin: 20px 0;
    cursor: pointer;
    transition: all 0.3s ease;
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    position: relative;
  }
  
  .upload-area:hover {
    border-color: var(--primary-color);
    background: rgba(58, 134, 255, 0.03);
  }
  
  .upload-area.dragover {
    border-color: var(--primary-color);
    background: rgba(58, 134, 255, 0.1);
    transform: scale(1.02);
  }
  
  .upload-icon {
    font-size: 48px;
    color: var(--primary-color);
    margin-bottom: 16px;
  }
  
  .upload-text {
    font-size: 18px;
    color: var(--text-dark);
    margin-bottom: 8px;
  }
  
  .upload-subtext {
    font-size: 14px;
    color: var(--text-light);
  }
  
  .upload-button {
    background: var(--upload-color);
    color: white;
    border: none;
    padding: 12px 24px;
    border-radius: 8px;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.3s ease;
    margin-top: 16px;
    width: 100%;
  }
  
  .upload-button:hover {
    background: #e55a2b;
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0,0,0,0.1);
  }
  
  .upload-button:disabled {
    background: var(--text-light);
    cursor: not-allowed;
    transform: none;
    box-shadow: none;
  }

  /* File preview */
  .file-preview {
    margin-top: 15px;
    padding: 10px;
    border-radius: 8px;
    background-color: rgba(58, 134, 255, 0.05);
    display: none;
  }
  
  .file-preview.active {
    display: block;
    animation: fadeIn 0.3s ease;
  }
  
  .file-info {
    display: flex;
    align-items: center;
    gap: 10px;
  }
  
  .file-icon {
    font-size: 24px;
    color: var(--primary-color);
  }
  
  .file-details {
    flex: 1;
  }
  
  .file-name {
    font-weight: 500;
    margin-bottom: 4px;
  }
  
  .file-size {
    font-size: 12px;
    color: var(--text-light);
  }
  
  .remove-file {
    color: var(--danger-color);
    cursor: pointer;
    padding: 5px;
    border-radius: 50%;
    transition: all 0.2s ease;
  }
  
  .remove-file:hover {
    background-color: rgba(244, 67, 54, 0.1);
  }

  /* Upload progress */
  .upload-progress {
    margin-top: 15px;
    display: none;
  }
  
  .upload-progress.active {
    display: block;
    animation: fadeIn 0.3s ease;
  }
  
  .progress-container {
    width: 100%;
    height: 8px;
    background-color: rgba(0, 0, 0, 0.1);
    border-radius: 4px;
    overflow: hidden;
    margin-bottom: 8px;
  }
  
  .progress-fill {
    height: 100%;
    background: linear-gradient(90deg, var(--upload-color), #e55a2b);
    border-radius: 4px;
    width: 0%;
    transition: width 0.3s ease;
  }
  
  .progress-text {
    font-size: 12px;
    color: var(--text-light);
    text-align: center;
  }

  /* Upload success message */
  .upload-success {
    margin-top: 15px;
    padding: 12px;
    border-radius: 8px;
    background-color: rgba(76, 175, 80, 0.1);
    color: var(--success-color);
    display: none;
    text-align: center;
    animation: fadeIn 0.3s ease;
  }
  
  .upload-success.active {
    display: block;
  }

  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }

  /* Recently uploaded files */
  .recent-files {
    background: white;
    border-radius: 16px;
    padding: 24px;
    box-shadow: 0 8px 20px rgba(0,0,0,0.08);
  }
  
  .file-table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 16px;
  }
  
  .file-table th {
    text-align: left;
    padding: 12px 16px;
    border-bottom: 2px solid var(--border-color);
    color: var(--text-dark);
    font-weight: 600;
  }
  
  .file-table td {
    padding: 12px 16px;
    border-bottom: 1px solid var(--border-color);
    color: var(--text-dark);
  }
  
  .file-table tr:last-child td {
    border-bottom: none;
  }
  
  .file-table tr:hover {
    background: rgba(58, 134, 255, 0.05);
  }
  
  .file-action {
    color: var(--primary-color);
    cursor: pointer;
    padding: 5px;
    border-radius: 4px;
    transition: all 0.2s ease;
  }
  
  .file-action:hover {
    background: rgba(58, 134, 255, 0.1);
  }

  /* Menu toggle for mobile (hidden by default) */
  .menu-toggle {
    display: none;
    position: fixed;
    top: 20px;
    right: 20px;
    background: var(--primary-color);
    color: white;
    border: none;
    border-radius: 50%;
    width: 50px;
    height: 50px;
    font-size: 24px;
    cursor: pointer;
    z-index: 1001;
    box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    transition: all 0.3s ease;
  }

  .menu-toggle:hover {
    background: var(--secondary-color);
    transform: rotate(90deg);
  }

  /* Responsive adjustments */
  @media (max-width: 992px) {
    .sidebar {
      position: fixed;
      left: -250px;
      height: 100%;
      z-index: 1000;
      margin-top: 0;
      border-radius: 0;
      transition: left 0.3s ease;
    }
    
    .sidebar.active {
      left: 0;
    }
    
    .main {
      margin-left: 0;
      margin-top: 20px;
    }
    
    .menu-toggle {
      display: flex;
      align-items: center;
      justify-content: center;
    }
    
    .content-container {
      flex-direction: column;
    }
    
    .right-column {
      width: 100%;
      min-width: auto;
    }
    
    .blue-card {
      width: 100%;
    }
    
    .popup-buttons {
      flex-direction: column;
    }
  }
  
  @media (max-width: 768px) {
    .top-left-logo {
      height: 50px;
      top: 10px;
      left: 10px;
    }
  }
  
  @media (max-width: 576px) {
    .top-bar {
      flex-wrap: wrap;
      justify-content: center;
    }
    
    .top-user {
      order: -1;
      width: 100%;
      justify-content: center;
      margin-bottom: 10px;
    }
    
    .card-buttons {
      flex-direction: column;
    }
  }
</style>
</head>
<body>

  <!-- Integrity Confirmation Popup -->
  <div class="popup-overlay" id="integrity-popup-overlay">
    <div class="integrity-popup">
      <div class="popup-header">
        <h2>Confirm Academic Integrity</h2>
      </div>
      <div class="popup-content">
        <div class="uploaded-file-card">
          <i class="fas fa-file-pdf file-icon-large"></i>
          <div class="file-details-large">
            <div class="file-name-large" id="popup-file-name">AI745_Assignment.pdf</div>
            <div class="file-info-large" id="popup-file-info">PDF Document • 2.4 MB</div>
          </div>
        </div>
        
        <div class="integrity-section">
          <h3><i class="fas fa-shield-alt"></i> Academic Integrity Statement</h3>
          <p>By submitting this work, I confirm that it is my own original work and that I have not engaged in cheating, plagiarism, or any unauthorized assistance.</p>
          
          <div class="checkbox-container">
            <input type="checkbox" id="integrity-checkbox">
            <label for="integrity-checkbox">I agree to the terms of the academic integrity statement</label>
          </div>
        </div>
        
        <div class="popup-buttons">
          <button class="popup-button cancel-button" id="cancel-button">Cancel</button>
          <button class="popup-button submit-button" id="final-submit-button" disabled>Submit Assignment</button>
        </div>
      </div>
    </div>
  </div>

  <img src="neuro grade logo.jpg" alt="NeuroGrade Logo" class="top-left-logo">

  <button class="menu-toggle" id="menu-toggle">
    <i class="fas fa-bars"></i>
  </button>

  <div class="sidebar" id="sidebar">
    <div class="nav">
      <button><i class="fas fa-home"></i> Home</button>
      <button><i class="fas fa-file-alt"></i> Tests</button>
      <button class="active"><i class="fas fa-tasks"></i> Assignments</button>
      <button><i class="fas fa-book-open"></i> Practice</button>
      <button><i class="fas fa-comment-dots"></i> Feedback</button>
    </div>
  </div>

  <div class="main">
    <div class="top-bar">
      <a href="#" class="icon-link" id="mail-icon">
        <i class="fas fa-envelope"></i>
        <span class="icon-badge">0</span>
      </a>
      <a href="#" class="icon-link" id="notification-icon">
        <i class="fas fa-bell"></i>
        <span class="icon-badge">0</span>
      </a>
      <div class="top-user">
        <span><b>BAT-MAN</b><br><small>Bsc IT</small></span>
        <img src="https://ui-avatars.com/api/?name=BAT-MAN&background=3a86ff&color=fff&size=35" alt="User Profile" />
      </div>
    </div>

    <div class="content-container">
      <div class="left-column">
        <div class="assignment-section">
          <div class="section-title">
            <span>POSTED ASSIGNMENTS</span>
            <span class="view-all" id="view-all-btn">
              <i class="fas fa-list"></i> View All
            </span>
          </div>
          <div class="cards-container" id="courses-container">
            <div class="blue-card">
              <div class="blue-card-content">
                <h3>Human-Computer Interaction Essay</h3>
                <span class="assignment-code">HCI1671</span>
                <div class="assignment-due">
                  <i class="far fa-calendar-alt"></i> Due: 12/05/2025
                </div>
                <div class="card-buttons">
                  <button class="card-button view-button">
                    <i class="fas fa-eye"></i> View
                  </button>
                  <button class="card-button download-button">
                    <i class="fas fa-download"></i> Download
                  </button>
                </div>
              </div>
            </div>
            
            <div class="blue-card">
              <div class="blue-card-content">
                <h3>Software Security Research</h3>
                <span class="assignment-code">SS711</span>
                <div class="assignment-due">
                  <i class="far fa-calendar-alt"></i> Due: 21/07/2025
                </div>
                <div class="card-buttons">
                  <button class="card-button view-button">
                    <i class="fas fa-eye"></i> View
                  </button>
                  <button class="card-button download-button">
                    <i class="fas fa-download"></i> Download
                  </button>
                </div>
              </div>
            </div>
            
            <div class="blue-card">
              <div class="blue-card-content">
                <h3>Artificial Intelligence Project</h3>
                <span class="assignment-code">AI745</span>
                <div class="assignment-due">
                  <i class="far fa-calendar-alt"></i> Due: 01/07/2025
                </div>
                <div class="card-buttons">
                  <button class="card-button view-button">
                    <i class="fas fa-eye"></i> View
                  </button>
                  <button class="card-button download-button">
                    <i class="fas fa-download"></i> Download
                  </button>
                </div>
              </div>
            </div>
            
            <div class="blue-card">
              <div class="blue-card-content">
                <h3>Database Design Assignment</h3>
                <span class="assignment-code">DB502</span>
                <div class="assignment-due">
                  <i class="far fa-calendar-alt"></i> Due: 15/06/2025
                </div>
                <div class="card-buttons">
                  <button class="card-button view-button">
                    <i class="fas fa-eye"></i> View
                  </button>
                  <button class="card-button download-button">
                    <i class="fas fa-download"></i> Download
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>

        <div class="recent-files">
          <h3>RECENTLY UPLOADED FILES</h3>
          <table class="file-table">
            <thead>
              <tr>
                <th>File Name</th>
                <th>Date Uploaded</th>
                <th>Status</th>
                <th>Action</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td>HCI1671_Assignment1.pdf</td>
                <td>12/05/2025</td>
                <td><span class="assignment-status status-completed">Graded</span></td>
                <td><i class="fas fa-download file-action"></i></td>
              </tr>
              <tr>
                <td>SS711_ResearchPaper.docx</td>
                <td>21/07/2025</td>
                <td><span class="assignment-status status-pending">Pending</span></td>
                <td><i class="fas fa-download file-action"></i></td>
              </tr>
              <tr>
                <td>AI745_Project.zip</td>
                <td>01/07/2025</td>
                <td><span class="assignment-status status-late">Late</span></td>
                <td><i class="fas fa-download file-action"></i></td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>

      <div class="right-column">
        <div class="upload-section">
          <h3>ASSIGNMENT UPLOAD</h3>
          <div class="upload-area" id="drop-zone">
            <div class="upload-icon">
              <i class="fas fa-cloud-upload-alt"></i>
            </div>
            <div class="upload-text">Drag and drop your file here</div>
            <div class="upload-subtext">or click to browse files (Max: 10MB)</div>
          </div>
          
          <div class="file-preview" id="file-preview">
            <div class="file-info">
              <i class="fas fa-file-pdf file-icon"></i>
              <div class="file-details">
                <div class="file-name" id="file-name">No file selected</div>
                <div class="file-size" id="file-size">0 KB</div>
              </div>
              <i class="fas fa-times remove-file" id="remove-file"></i>
            </div>
          </div>
          
          <div class="upload-progress" id="upload-progress">
            <div class="progress-container">
              <div class="progress-fill" id="progress-fill"></div>
            </div>
            <div class="progress-text" id="progress-text">Uploading... 0%</div>
          </div>
          
          <div class="upload-success" id="upload-success">
            <i class="fas fa-check-circle"></i> File uploaded successfully!
          </div>
          
          <input type="file" id="file-input" style="display: none;">
          <button class="upload-button" id="upload-button" disabled>Upload</button>
        </div>
      </div>
    </div>
  </div>

<script>
  // Mobile menu toggle functionality
  document.addEventListener('DOMContentLoaded', function() {
    const menuToggle = document.getElementById('menu-toggle');
    const sidebar = document.getElementById('sidebar');
    const viewAllBtn = document.getElementById('view-all-btn');
    const integrityPopup = document.getElementById('integrity-popup-overlay');
    const integrityCheckbox = document.getElementById('integrity-checkbox');
    const finalSubmitButton = document.getElementById('final-submit-button');
    const cancelButton = document.getElementById('cancel-button');
    const popupFileName = document.getElementById('popup-file-name');
    const popupFileInfo = document.getElementById('popup-file-info');
    
    menuToggle.addEventListener('click', function() {
      sidebar.classList.toggle('active');
    });
    
    // Close sidebar when clicking outside
    document.addEventListener('click', function(event) {
      const isClickInsideSidebar = sidebar.contains(event.target);
      const isClickInsideMenuToggle = menuToggle.contains(event.target);
      
      if (!isClickInsideSidebar && !isClickInsideMenuToggle && sidebar.classList.contains('active')) {
        sidebar.classList.remove('active');
      }
    });
    
    // View All button functionality
    viewAllBtn.addEventListener('click', function() {
      alert('View All Assignments functionality would show all assignments in a dedicated page.');
    });
    
    // Integrity checkbox change
    integrityCheckbox.addEventListener('change', function() {
      finalSubmitButton.disabled = !this.checked;
    });
    
    // Cancel button in popup
    cancelButton.addEventListener('click', function() {
      integrityPopup.classList.remove('active');
    });
    
    // Final submit button
    finalSubmitButton.addEventListener('click', function() {
      // Show loading state
      finalSubmitButton.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Submitting...';
      finalSubmitButton.disabled = true;
      
      // Simulate submission process
      setTimeout(() => {
        alert('Assignment submitted successfully!');
        integrityPopup.classList.remove('active');
        finalSubmitButton.innerHTML = 'Submit Assignment';
        finalSubmitButton.disabled = false;
        integrityCheckbox.checked = false;
      }, 2000);
    });
    
    // File upload functionality
    const dropZone = document.getElementById('drop-zone');
    const fileInput = document.getElementById('file-input');
    const filePreview = document.getElementById('file-preview');
    const fileName = document.getElementById('file-name');
    const fileSize = document.getElementById('file-size');
    const removeFile = document.getElementById('remove-file');
    const uploadButton = document.getElementById('upload-button');
    const uploadProgress = document.getElementById('upload-progress');
    const progressFill = document.getElementById('progress-fill');
    const progressText = document.getElementById('progress-text');
    const uploadSuccess = document.getElementById('upload-success');
    
    let selectedFile = null;
    
    // Format file size
    function formatFileSize(bytes) {
      if (bytes === 0) return '0 Bytes';
      const k = 1024;
      const sizes = ['Bytes', 'KB', 'MB', 'GB'];
      const i = Math.floor(Math.log(bytes) / Math.log(k));
      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
    }
    
    // Get file icon based on type
    function getFileIcon(type) {
      if (type.includes('pdf')) return 'fa-file-pdf';
      if (type.includes('word') || type.includes('document')) return 'fa-file-word';
      if (type.includes('zip') || type.includes('compressed')) return 'fa-file-archive';
      if (type.includes('image')) return 'fa-file-image';
      return 'fa-file';
    }
    
    // Handle file selection
    function handleFileSelect(file) {
      if (file) {
        // Check file size (max 10MB)
        if (file.size > 10 * 1024 * 1024) {
          alert('File size exceeds 10MB limit. Please choose a smaller file.');
          return;
        }
        
        selectedFile = file;
        const fileIcon = getFileIcon(file.type);
        
        // Update preview
        fileName.textContent = file.name;
        fileSize.textContent = formatFileSize(file.size);
        document.querySelector('.file-icon').className = `fas ${fileIcon} file-icon`;
        filePreview.classList.add('active');
        uploadButton.disabled = false;
        
        // Reset progress and success messages
        uploadProgress.classList.remove('active');
        uploadSuccess.classList.remove('active');
      }
    }
    
    // Click to select file
    dropZone.addEventListener('click', () => {
      fileInput.click();
    });
    
    // Drag and drop events
    dropZone.addEventListener('dragover', function(e) {
      e.preventDefault();
      e.stopPropagation();
      this.classList.add('dragover');
    });
    
    dropZone.addEventListener('dragleave', function(e) {
      e.preventDefault();
      e.stopPropagation();
      this.classList.remove('dragover');
    });
    
    dropZone.addEventListener('drop', function(e) {
      e.preventDefault();
      e.stopPropagation();
      this.classList.remove('dragover');
      
      if (e.dataTransfer.files.length) {
        handleFileSelect(e.dataTransfer.files[0]);
      }
    });
    
    // File input change
    fileInput.addEventListener('change', () => {
      if (fileInput.files.length) {
        handleFileSelect(fileInput.files[0]);
      }
    });
    
    // Remove selected file
    removeFile.addEventListener('click', (e) => {
      e.stopPropagation();
      selectedFile = null;
      filePreview.classList.remove('active');
      uploadButton.disabled = true;
      fileInput.value = '';
    });
    
    // Upload button click
    uploadButton.addEventListener('click', () => {
      if (!selectedFile) return;
      
      // Simulate upload process
      uploadButton.disabled = true;
      uploadProgress.classList.add('active');
      
      let progress = 0;
      const interval = setInterval(() => {
        progress += Math.random() * 10;
        if (progress >= 100) {
          progress = 100;
          clearInterval(interval);
          
          // Show success message
          setTimeout(() => {
            uploadProgress.classList.remove('active');
            uploadSuccess.classList.add('active');
            
            // Show integrity popup after upload
            setTimeout(() => {
              // Update popup with file info
              popupFileName.textContent = selectedFile.name;
              popupFileInfo.textContent = 'PDF Document • ' + formatFileSize(selectedFile.size);
              
              // Show the popup
              integrityPopup.classList.add('active');
            }, 1000);
          }, 500);
        }
        
        // Update progress bar
        progressFill.style.width = `${progress}%`;
        progressText.textContent = `Uploading... ${Math.round(progress)}%`;
      }, 200);
    });
    
    // Add button functionality for assignment cards
    const viewButtons = document.querySelectorAll('.view-button');
    const downloadButtons = document.querySelectorAll('.download-button');
    
    viewButtons.forEach(button => {
      button.addEventListener('click', (e) => {
        e.stopPropagation();
        const assignmentTitle = button.closest('.blue-card').querySelector('h3').textContent;
        alert(`View functionality would open: ${assignmentTitle}`);
      });
    });
    
    downloadButtons.forEach(button => {
      button.addEventListener('click', (e) => {
        e.stopPropagation();
        const assignmentTitle = button.closest('.blue-card').querySelector('h3').textContent;
        alert(`Download functionality would start for: ${assignmentTitle}`);
      });
    });
    
    // Add some sample notifications
    setTimeout(() => {
      document.getElementById('mail-icon').querySelector('.icon-badge').textContent = '3';
      document.getElementById('notification-icon').querySelector('.icon-badge').textContent = '5';
    }, 1000);
  });
</script>

</body>
</html>

